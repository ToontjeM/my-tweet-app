name: GitHub Actions Demo
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
jobs:
    Build_container:
        runs-on: ubuntu-latest
        steps:
         - name: Check out the repo
           uses: actions/checkout@v2

         - name: Get short SHA
           run: echo "GHA_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

         - name: Build
           uses: docker/build-push-action@v2
           with:
             tags: jeromebaude/my-tweet-app-lacework:${{ env.GHA_SHA }},jeromebaude/my-tweet-app-lacework:latest
             load: true

    Check_vulnerabilties:
        needs: Build_container
        runs-on: ubuntu-latest
        steps:
         - name: lw-scanner
           uses: timarenz/lw-scanner-action@v0.2.2
           env:
             LW_ACCOUNT_NAME: ${{ secrets.LW_ACCOUNT_NAME }}
             LW_ACCESS_TOKEN: ${{ secrets.LW_ACCESS_TOKEN }}
           with:
             image_name: jeromebaude/my-tweet-app-lacework
             image_tag: ${{ env.GHA_SHA }}
             fail_only_if_vulnerabilities_fixable: false
             scan_library_packages: true
             fail_if_critical_vulnerabilities_found: true
             fail_if_high_vulnerabilities_found: false
             fail_if_medium_vulnerabilities_found: false

    Deploy_to_EKS:
        needs: Check-vulnerabilities
        runs-on: ubuntu-latest
        steps:
         - name: Login to DockerHub
           uses: docker/login-action@v1
           with:
             username: ${{ secrets.DOCKERHUB_USERNAME }}
             password: ${{ secrets.DOCKERHUB_TOKEN }}

         - name: Build and push
           uses: docker/build-push-action@v2
           with:
             push: true
             tags: jeromebaude/my-tweet-app-lacework:${{ env.GHA_SHA }},jeromebaude/my-tweet-app-lacework:latest

         - name: Configure AWS credentials
           uses: aws-actions/configure-aws-credentials@v1
           with:
             aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
             aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
             aws-region: eu-west-3

         - name: deploy to cluster
           uses: kodermax/kubectl-aws-eks@master
           env:
             KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
           with:
             args: set image deployment/my-tweet-app my-tweet-app=jeromebaude/my-tweet-app-lacework:${{ env.GHA_SHA }} -n lacework

         - name: verify deployment
           uses: kodermax/kubectl-aws-eks@master
           env:
             KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
           with:
             args: rollout status deployment/my-tweet-app -w -n lacework
